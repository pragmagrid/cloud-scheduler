#!/bin/bash

# create a random password, length is passed as an argument
getPassword () {
    word=`mkpasswd -l $1 -s 0 2>/dev/nul`
    echo $word
}

# default variables
setDefaults () {
    DBname=DBNAME					# db name
    DBuser=DBUSER					# db user 

    ETCDIR=/opt/CSNAME/etc				# directory with DB files
    BINDIR=/opt/CSNAME/bin				# directory with suport scripts and files
    DB_SCHEMA=$ETCDIR/DBSCHEMA.sql			# db schema pragma-initdb.sql.tmpl
    DB_DATA=$ETCDIR/DBDATA.sql				# db data
    DB_ADMIN=$ETCDIR/DBADMIN.sql			# db admin access update

    APPJS=/var/www/html/CSNAME/app.js			# GUI main driver file
    USERPY=/var/www/html/CSNAME/scripts/User.py		# python script

    # files with password for DB access
    pass1=$ETCDIR/$DBuser.pass

    # get host-specific values
    LOCALHOST=`hostname`
    EXT=`date +%Y%m%d-%H%M`				# extention to append to saved files

    # generate password
    DBPASSWD=$(getPassword 10)
    SHA512HASH=`$BINDIR/sha512.py $DBPASSWD`

    # start log file
    CSLOG=/tmp/cs-config.log
    saveFile $CSLOG
    cat /dev/null > $CSLOG
}

updateFiles () {
    # create a file to initialize a database
    saveFile $DB_SCHEMA               # save old if present
    cp -p $DB_SCHEMA.tmpl $DB_SCHEMA  # start with a template
    updateConfigFile $DB_SCHEMA       # update DB schema values

    # update db admin access  
    saveFile $DB_ADMIN               # save old if present
    cp -p $DB_ADMIN.tmpl $DB_ADMIN   # start with a template
    updateConfigFile $DB_ADMIN       # update DB access values

    # update FQDN in GUI files
    updateHostName $APPJS
    updateHostName $USERPY
}

saveFile () {
    # save file if exist
    if [ -f $1 ]; then
        cp -p $1 $1.$EXT
    fi
}

createPassFile () {
    # create a file with pasword for DB access, save previous if exist
    saveFile $pass1
    echo $DBPASSWD > $pass1
    chmod 600 $pass1 
}

updateConfigFile () {
    echo "Updating  file $1" | tee -a $CSLOG
    sed -i "s/DBPASSWD/$DBPASSWD/g" $1
    sed -i "s/SHA512HASH/$SHA512HASH/g" $1
}

updateHostName () {
    # update place holder for a hostname with FQDN in a file
    echo "Updating  file $1" | tee -a $CSLOG
    sed -i "s/LOCALHOST/$LOCALHOST/g" $1
}

createDB () {
    # create database and load data
    createPassFile

    echo "Creating $DBname database..." | tee -a $CSLOG
    mysql < $DB_SCHEMA 2>&1 | tee -a $CSLOG

    echo "Inserting data into database  $DBname ..." | tee -a $CSLOG
    mysql -D $DBname < $DB_DATA 2>&1 | tee -a $CSLOG

    echo "Updating admin access in the database  $DBname ..." | tee -a $CSLOG
    mysql -D $DBname < $DB_ADMIN 2>&1 | tee -a $CSLOG
}

#### Main ####
setDefaults
updateFiles
createDB

