#!/bin/bash

# create a random password, length is passed as argument
getPassword () {
    word=`mkpasswd -l $1 -s 0 2>/dev/nul`
    echo $word
}

# default variables
setDefaults () {
    BASEDIR=/var/www/html/INSTDIR           # web server deployment directory 
    DBname=DBNAME                           # db name
    DBuser=DBUSER                           # db user 

    ETCDIR=/opt/INSTDIR/etc                 # directory with suport scripts and files
    CONF=$BASEDIR/config/config.php         # config file
    DB_SCHEMA=$ETCDIR/install-db.sql        # db schema
    DB_ACCESS=$ETCDIR/install-admin.sql     # db admin access
    DB_DATA=$ETCDIR/install-data.sql        # db data

    # files with password for DB access
    pass1=$ETCDIR/$DBuser.pass
    pass2=$ETCDIR/install.pass

    # get host-specific values
    getVals
}

updateFiles () {
    # save files if present 
    saveFile $CONF 
    saveFile $DB_SCHEMA
    saveFile $DB_ACCESS

    # create files from templates
    cp -p $CONF.tmpl $CONF
    cp -p $DB_SCHEMA.tmpl $DB_SCHEMA
    cp -p $DB_ACCESS.tmpl $DB_ACCESS

    # update values
    updateConfigFile $CONF
    updateConfigFile $DB_SCHEMA
    updateConfigFile $DB_ACCESS
}


# find host-specific values for config file
getVals () {
    FQDN=`hostname`
    ADMIN_EMAIL="root@$FQDN"
    TIMEZONE=`/opt/rocks/bin/rocks list host attr localhost | grep Timezone  | awk '{print $3}'`
    DBPASSWD=$(getPassword 10)
    DBPASSWD='pragma28' # FIXME, temp for debugging
    INSTALLPASSWD=$(getPassword 10)
    SALT=$(getPassword 8)
    EXT=`date +%Y%m%d-%H%M`                # extention to append to saved files
    CREATED=`date +"%Y-%m-%d %H:%M"`     # time stamp to put into db for admin user
    SYSLANG=$(getLang)
}

getLang () {
    if [ -n "$LANG" ]; then
        syslang="en_US"
    else
        syslang=`echo $LANG | awk -F. '{print $1}'`
    fi
    echo $syslang
}


# save file if exist
saveFile () {
    if [ -f $1 ]; then
        cp -p $1 $1.$EXT
    fi
}

# save db user passwords
createPassFile () {
    # save previous if exist
    saveFile $pass1
    saveFile $pass2

    # create files with paswords for DB access 
    echo $DBPASSWD > $pass1
    echo $INSTALLPASSWD > $pass2
    chmod 600 $pass1 $pass2
}

updateConfigFile () {
    echo "Updating  file $1"
    sed -i "s/FQDN/$FQDN/g" $1
    sed -i "s/ADMIN_EMAIL/$ADMIN_EMAIL/g" $1
    sed -i "s%TIMEZONE%$TIMEZONE%g" $1
    sed -i "s/DBPASSWD/$DBPASSWD/g" $1
    sed -i "s/INSTALLPASSWD/$INSTALLPASSWD/g" $1
    sed -i "s/ADMIN/$DBuser/g" $1
    sed -i "s/CREATED/$CREATED/g" $1
    sed -i "s/SALT/$SALT/g" $1
    sed -i "s/LANG/$SYSLANG/g" $1
}

updateDirAccess () {
    if [ -d $BASEDIR ]; then
        echo "Updating directory permissions in $BASEDIR"
        chown -R root:apache $BASEDIR/tpl*
        chown -R root:apache $BASEDIR/Web/uploads
        chmod g+rwx $BASEDIR/tpl*
        chmod -R g+rwx $BASEDIR/Web/uploads
    else
        echo "ERROR: missing $BASEDIR"
    fi
}

# create database and load data
createDB () {
    createPassFile
    echo "Creating $DBname database..."
    mysql < $DB_SCHEMA

    echo "Creating admin access for user $DBuser ..."
    mysql -D $DBname < $DB_ACCESS

    echo "Inserting data into database  $DBname ..."
    mysql -D $DBname < $DB_DATA
}

#### Main ####
setDefaults
updateFiles
updateDirAccess
createDB

